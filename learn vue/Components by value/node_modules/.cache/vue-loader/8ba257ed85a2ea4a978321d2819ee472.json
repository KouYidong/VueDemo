{"remainingRequest":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dao\\Desktop\\learn\\notes\\learn vue\\Components by value\\components\\Parent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Dao\\Desktop\\learn\\notes\\learn vue\\Components by value\\components\\Parent.vue","mtime":1565773403205},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_babel-loader@8.0.6@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Son1 from './Son1'\r\nexport default {\r\n  components: {\r\n    Son1\r\n  },\r\n  data() {\r\n    return {\r\n      mny: 100\r\n    }\r\n  },\r\n  methods: {\r\n    change(val) {\r\n      this.mny = val;\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Parent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Parent.vue","sourceRoot":"components","sourcesContent":["<template>\r\n  <div>\r\n    父亲: {{mny}}\r\n\r\n    <Son1 :value=\"mny\" @input=\"change\"></Son1>\r\n    <!-- <Son1 :value1=\"mny\" @update:aaa=\"(value) => this.mny = value\"></Son1> -->\r\n    <!-- \r\n      上边这种写法模板解析：\r\n        解析出一个对象来，{input: change},把这个对象传递到子组件中，\r\n        子组件会循环这个对象，把这个对象挂载到子组件中 this.$on('input', change)\r\n        子组件可以取触发 input ，所对应的事件就是 父组件中的 chagnge\r\n     -->\r\n    <!-- <Son1 :value.sync=\"mny\"></Son1> -->\r\n\r\n    <!-- <Son1 :value=\"mny\" @input=\"(mny) => this.mny = mny\"></Son1>\r\n    <Son1 v-model=\"mny\"></Son1> -->\r\n\r\n    <!-- .sync 和 v-model 的唯一区别：\r\n      .sync 可以自定义\r\n      v-model 只能叫 value\r\n     -->\r\n\r\n     <!-- 多层级传递数据 -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport Son1 from './Son1'\r\nexport default {\r\n  components: {\r\n    Son1\r\n  },\r\n  data() {\r\n    return {\r\n      mny: 100\r\n    }\r\n  },\r\n  methods: {\r\n    change(val) {\r\n      this.mny = val;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}