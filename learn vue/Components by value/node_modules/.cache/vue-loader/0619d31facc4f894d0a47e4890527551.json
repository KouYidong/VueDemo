{"remainingRequest":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dao\\Desktop\\learn\\notes\\learn vue\\Components by value\\components\\Parent.vue?vue&type=template&id=d3b0fe76&","dependencies":[{"path":"C:\\Users\\Dao\\Desktop\\learn\\notes\\learn vue\\Components by value\\components\\Parent.vue","mtime":1565773403205},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dao\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\_vue-loader@15.7.1@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div>\n  父亲: {{mny}}\n\n  <Son1 :value=\"mny\" @input=\"change\"></Son1>\n  <!-- <Son1 :value1=\"mny\" @update:aaa=\"(value) => this.mny = value\"></Son1> -->\n  <!-- \n    上边这种写法模板解析：\n      解析出一个对象来，{input: change},把这个对象传递到子组件中，\n      子组件会循环这个对象，把这个对象挂载到子组件中 this.$on('input', change)\n      子组件可以取触发 input ，所对应的事件就是 父组件中的 chagnge\n   -->\n  <!-- <Son1 :value.sync=\"mny\"></Son1> -->\n\n  <!-- <Son1 :value=\"mny\" @input=\"(mny) => this.mny = mny\"></Son1>\n  <Son1 v-model=\"mny\"></Son1> -->\n\n  <!-- .sync 和 v-model 的唯一区别：\n    .sync 可以自定义\n    v-model 只能叫 value\n   -->\n\n   <!-- 多层级传递数据 -->\n</div>\n",null]}